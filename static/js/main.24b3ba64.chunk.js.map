{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","BASE__URL","request","a","fetch","response","json","FindMovie","addMovie","useState","newMovie","setNewMovie","buttonVisible","setButtonVisible","setTitle","error","setError","findMovie","Title","selectMovie","imdbID","Poster","Plot","imbdUrl","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","onClick","disabled","preventDefault","defaultProps","App","data","setMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24b3ba64.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies,\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const key = 'dae19b6e';\n\nconst BASE__URL = `https://www.omdbapi.com/?apikey=${key}&`;\n\nexport const request = async(title) => {\n  const response = await fetch(`${BASE__URL}t=${title}`);\n\n  return response.json();\n};\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\n\nimport { MovieCard } from '../MovieCard';\nimport { request } from '../../api/api';\n\nexport const FindMovie = ({ addMovie, movies }) => {\n  const [newMovie, setNewMovie] = useState('');\n  const [buttonVisible, setButtonVisible] = useState(true);\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(true);\n\n  const findMovie = async() => {\n    const movie = await request(title);\n\n    if (movie.Title) {\n      const selectMovie = {\n        title: movie.Title,\n        imdbId: movie.imdbID,\n        imgUrl: movie.Poster,\n        description: movie.Plot,\n        imbdUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n      };\n\n      setTitle('');\n      setNewMovie(selectMovie);\n      setButtonVisible(false);\n    } else {\n      setError(true);\n    }\n  };\n\n  const changeTitle = (event) => {\n    setTitle(event.target.value);\n    setError(false);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setButtonVisible(true);\n\n    addMovie(newMovie);\n    setNewMovie('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              value={title}\n              onChange={changeTitle}\n            />\n          </div>\n\n          <p className={classNames(\n            'help', 'is-danger', { 'is-hidden': !error },\n          )}\n          >\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={buttonVisible}\n              onClick={handleSubmit}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        { newMovie && (<MovieCard {...newMovie} />)}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      imgUrl: PropTypes.string,\n      imdbUrl: PropTypes.string,\n      imdbId: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nFindMovie.defaultProps = {\n  movies: [],\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovie] = useState(data);\n\n  const addMovie = (movie) => {\n    setMovie([...movies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={movies}\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}